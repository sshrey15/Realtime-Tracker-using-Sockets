<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
    <title>Realtime-Tracking-Applications</title>
    <style>
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }

      html,
      body {
        width: 100%;
        height: 100%;
      }

      #map {
        width: 100%;
        height: 100%;
      }
    </style>
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.min.css"
      integrity="sha512-h9FcoyWjHcOcmEVkxOfTLnmZFWIH0iZhZT1H2TbOq55xssQGEJHEaIm+PgoUaZbRvQTNTluNOEfb1ZRy6D3BOw=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    />
  </head>
  <body>
    <div id="map"></div>

    <script
      src="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet-src.min.js"
      integrity="sha512-3/WyQrhTdqSVmSifQS62akgtNBhZha2lS44TnoN9Jk3J01FvsKK4suVmz6t5FtccGb5iJw58GoFhBjPE5EPc8Q=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    ></script>
    <script
      src="https://cdn.socket.io/4.7.5/socket.io.min.js"
      integrity="sha384-2huaZvOR9iDzHqslqwpR87isEmrfxqyWOF7hr7BY6KG0+hVKLoEXMPUJw3ynWuhO"
      crossorigin="anonymous"
    ></script>
    <script>
      const socket = io();
      console.log(socket);

      if (navigator.geolocation) {
        navigator.geolocation.watchPosition(
          (position) => {
            const { latitude, longitude } = position.coords;
            socket.emit("send-location", { latitude, longitude });
            userLocation = [latitude, longitude];
          },
          (error) => {
            console.log(error);
          }
        );
      }
      {
        enableHighAccuracy: true;

        maximumAge: 0;
        timeout: 2000;
      }

      const map = L.map("map").setView([0, 0], 10);
      L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
        attribution: "Â© sshrey15",
      }).addTo(map);

      const markers = {};
      let userLocation = [0, 0];

      socket.on("receive-location", (data) => {
        console.log("Received location data:", data);
        const { id, latitude, longitude } = data;
        console.log("Map object:", map);
        map.setView([latitude, longitude], 14);
        if (markers[id]) {
          markers[id].setLatLng([latitude, longitude]);
        } else {
          markers[id] = L.marker([latitude, longitude]).addTo(map);
        }
      });

      socket.on("user-disconnected", (id) => {
        if (markers[id]) {
          map.removeLayer(markers[id]);
          delete markers[id];
        }
      });
    </script>
  </body>
</html>
